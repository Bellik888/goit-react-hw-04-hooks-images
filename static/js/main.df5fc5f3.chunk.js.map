{"version":3,"sources":["components/Searchbar/Searchbar.js","service/pixabayAPI.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/ImagesList/ImagesList.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","inputValue","setInputValue","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","PixabayAPI","BASE_URL","API_KEY","this","_searchQuery","_page","perPage","urlWithKey","a","params","page","url","axios","get","result","data","hits","console","log","ImageGallery","children","ImageGalleryItem","searchResults","openModal","map","id","webformatURL","tags","onClick","src","alt","Button","modalRoot","document","querySelector","Modal","onClose","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","event","currentTarget","newPixabayAPI","ImagesList","searchValue","setSearchResults","status","setStatus","largeImageId","setLargeImageId","isModalOpen","setIsModalOpen","resetPage","searchQuery","searchPhotos","then","catch","error","findImg","find","paramLoadMore","length","color","height","width","timeout","Number","prev","scrollTo","top","documentElement","scrollHeight","behavior","err","largeImageURL","App","state","searchImages","setState","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df5fc5f3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSearchValue = e => {\n    setInputValue(e.target.value);\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleSearchValue}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\n// class Searchbar {\n//   state = {\n//     inputValue: '',\n//   };\n\n//   handleSearchValue = e => {\n//     this.setState({ inputValue: e.target.value });\n//   };\n// handleFormSubmit = e => {\n//   e.preventDefault();\n//   this.props.onSubmit(this.state.inputValue);\n// };\n\n//   render() {\n//     const { handleFormSubmit, handleSearchValue } = this;\n//     return (\n//       <header className=\"Searchbar\">\n//         <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\n//           <button type=\"submit\" className=\"SearchForm-button\">\n//             <span className=\"SearchForm-button-label\">Search</span>\n//           </button>\n\n//           <input\n//             className=\"SearchForm-input\"\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             onChange={handleSearchValue}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n","import axios from 'axios';\n\nexport class PixabayAPI {\n  constructor(BASE_URL, API_KEY) {\n    this.BASE_URL = BASE_URL;\n    this.API_KEY = API_KEY;\n    this._searchQuery = '';\n    this._page = 1;\n    this.perPage = 12;\n    this.urlWithKey = '';\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  async searchPhotos() {\n    this.urlWithKey = this.BASE_URL + `?key=${this.API_KEY}`;\n    let params = `&q=${this._searchQuery}&page=${this.page}&per_page=${this.perPage}`;\n    let url = this.urlWithKey + params;\n\n    try {\n      const result = await axios.get(url);\n      const data = result.data.hits;\n      return data;\n    } catch (err) {\n      return console.log(err);\n    }\n  }\n}\n","export const ImageGallery = ({ children }) => {\n  return <ul className=\"ImageGallery\">{children}</ul>;\n};\n","import PropTypes from 'prop-types';\n\nexport const ImageGalleryItem = ({ searchResults, openModal }) => {\n  return (\n    <>\n      {searchResults.map(({ id, webformatURL, tags }) => (\n        <li key={id} id={id} onClick={openModal} className=\"ImageGalleryItem\">\n          <img\n            src={webformatURL}\n            alt={tags}\n            className=\"ImageGalleryItem-image\"\n          />\n        </li>\n      ))}\n    </>\n  );\n};\nImageGalleryItem.propTypes = {\n  searchResults: PropTypes.array,\n  openModal: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nexport const Button = ({ onClick }) => {\n  return (\n    <>\n      <button className=\"btn-load\" type=\"button\" onClick={onClick}>\n        Load more\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modalRoot');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  });\n\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  function handleKeyDown(e) {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  }\n  const handleClickBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleClickBackdrop}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport { PixabayAPI } from '../../service/pixabayAPI';\nimport { ImageGallery } from '../ImageGallery/ImageGallery';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\nimport { Button } from '../Button/Button';\nimport { Modal } from '../Modal/Modal';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '23189092-912e167e41c5e7d499821c37e';\nconst newPixabayAPI = new PixabayAPI(BASE_URL, API_KEY);\n\nexport const ImagesList = ({ searchValue }) => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [largeImageId, setLargeImageId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (!searchValue) {\n      return;\n    }\n    setStatus('pending');\n    newPixabayAPI.resetPage();\n    newPixabayAPI.searchQuery = searchValue;\n    newPixabayAPI\n      .searchPhotos()\n      .then(result => {\n        setSearchResults(result);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus('rejected');\n      });\n  }, [searchValue]);\n\n  const handleClick = () => {\n    newPixabayAPI.page = 1;\n    newPixabayAPI\n      .searchPhotos()\n      .then(result => {\n        setSearchResults(prev => [...prev, ...result]);\n        setStatus('resolved');\n      })\n      .then(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        setStatus('rejected');\n      });\n  };\n\n  const findImg = () => {\n    const largeImg = searchResults.find(result => {\n      return result.id === largeImageId;\n    });\n    return largeImg;\n  };\n\n  const openModal = e => {\n    setIsModalOpen(true);\n    setLargeImageId(Number(e.currentTarget.id));\n  };\n\n  const closeModal = () => setIsModalOpen(false);\n\n  const paramLoadMore = searchResults.length > 0 && searchResults.length >= 12;\n\n  if (status === 'idle') {\n    return (\n      <div className=\"container-title\">\n        <p>You can find any pictures, photos and images here</p>\n      </div>\n    );\n  }\n\n  if (status === 'pending') {\n    return (\n      <div className=\"loader\">\n        <Loader\n          type=\"Circles\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <div className=\"container-title\">\n        <p>Uppps, error</p>\n      </div>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <ImageGallery>\n          {searchResults.length > 0 && (\n            <ImageGalleryItem\n              openModal={openModal}\n              searchResults={searchResults}\n            />\n          )}\n        </ImageGallery>\n        {paramLoadMore > 0 && <Button onClick={handleClick} />}\n        {searchResults.length === 0 && (\n          <div className=\"container-title\">\n            <p>Sorry, we did not find this</p>\n          </div>\n        )}\n        {isModalOpen && (\n          <Modal largeImageId={largeImageId} onClose={closeModal}>\n            <img src={findImg().largeImageURL} alt={findImg().tags} />\n          </Modal>\n        )}\n      </>\n    );\n  }\n};\n\nImagesList.propTypes = {\n  searchValue: PropTypes.string,\n};\n","import { Component } from 'react';\nimport './App.css';\n\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImagesList } from './components/ImagesList/ImagesList';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  searchImages = value => {\n    this.setState({ searchQuery: value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.searchImages} />\n        <ImagesList searchValue={this.state.searchQuery} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}